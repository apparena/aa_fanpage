<?php
  /**
  * this is an object for HTTP REQUEST PARAMETER
  * with this object, can defined necessary paramter, defautl paramter,
  *  check parameter if valid and try to filter it to get valid parameter
  */
/*
TEST:
  $object=new ParameterObject();
  $object->setRule("app_id","required",'int');
  $object->setRule("is_default",'required','boolean');
  $object->setDefault("is_default",false);
  
  $object->fromQuery($_POST);
  $object->toQuery()
  
  $object->isvalid()
  */
    class Frd_ParameterObject
    {
      /**
      *  array(
      *      'required'=>true
      *       'int'=>array(
                               'not'=>0,
                            )
               'string'=>array(
                         'min_length'=>3,
                         'max_length'=>20,
                         'not'=>'abc',
                )
      */
      protected $rules=array();
      protected $default=array();
      
      function setRule($name,$type,$extra_parameter=true)
      {
      
      }
      function setDefault($name,$default)
      {
      }
      
      
  function get($name)
  {
    if($this->has($name) == false)
    {
        if($this->isRequired($name) && $this->hasDefault($name) == true)
         {
           reutrn $this->getDefault($name);
         }
         
       return null;
    }
    
    return parent::get($name);
  }
  function isRequired
  function hasDefault
  function getDefault
  
  function toQuery
  function fromQuery
  function isvalid()
  
    }

  /**
  * filter the paramters to get valid parameter
  *  return true for success and false for failed
  */
  function filter()
  
    }

